export default {
	'array-bracket-newline': [
		'warn',
		'consistent',
	],
	'array-bracket-spacing': 'warn',
	'array-element-newline': [
		'warn',
		'consistent',
	],
	'arrow-body-style': 'warn',
	'arrow-parens': ['warn', 'as-needed'],
	'arrow-spacing': 'warn',
	'block-spacing': 'warn',
	'brace-style': 'warn',
	camelcase: 'warn',
	'class-methods-use-this': 'warn',
	'comma-dangle': [
		'warn',
		'always-multiline',
	],
	'comma-spacing': 'warn',
	'comma-style': 'warn',
	'computed-property-spacing': 'warn',
	'consistent-this': [
		'warn',
		'scope',
	],
	'constructor-super': 'warn',
	curly: [
		'warn',
		'multi-line',
	],
	'default-case': 'warn',
	'dot-location': 'warn',
	'dot-notation': [
		'warn',
		{
			allowPattern: '^[a-z]+(_[a-z]+)+$',
		},
	],
	'eol-last': 'warn',
	eqeqeq: 'error',
	'func-call-spacing': 'warn',
	'function-call-argument-newline': ['warn', 'consistent'],
	'function-paren-newline': ['warn', 'consistent'],
	'implicit-arrow-linebreak': 'warn',
	indent: ['warn', 'tab'],
	'key-spacing': 'warn',
	'keyword-spacing': 'warn',
	'linebreak-style': 'warn',
	'lines-between-class-members': [
		'warn',
		'always',
		{
			exceptAfterSingleLine: true,
		},
	],
	'max-classes-per-file': 'warn',
	'max-len': [
		'warn',
		{
			code: 120,
			ignoreStrings: true,
			ignoreTemplateLiterals: true,
		},
	],
	'new-parens': 'warn',
	'newline-per-chained-call': 'warn',
	'no-cond-assign': ['warn', 'except-parens'],
	'no-console': [
		'warn',
		{
			allow: ['warn', 'error'],
		},
	],
	'no-constant-condition': 'warn',
	'no-debugger': 'warn',
	'no-duplicate-case': 'warn',
	'no-empty': 'warn',
	'no-eval': 'warn',
	'no-extra-semi': 'warn',
	'no-fallthrough': 'warn',
	'no-invalid-regexp': 'warn',
	'no-invalid-this': 'warn',
	'no-irregular-whitespace': 'warn',
	'no-mixed-spaces-and-tabs': ['warn', 'smart-tabs'],
	'no-multi-spaces': 'warn',
	'no-multi-str': 'warn',
	'no-multiple-empty-lines': 'warn',
	'no-redeclare': 'warn',
	'no-regex-spaces': 'warn',
	'no-restricted-syntax': [
		'warn',
		'ForInStatement',
	],
	'no-return-await': 'warn',
	'no-sequences': 'warn',
	'no-sparse-arrays': 'warn',
	'no-template-curly-in-string': 'warn',
	'no-trailing-spaces': [
		'warn',
		{
			ignoreComments: true,
		},
	],
	'no-unexpected-multiline': 'warn',
	'no-unsafe-finally': 'warn',
	'no-unused-labels': 'warn',
	'no-whitespace-before-property': 'warn',
	'object-curly-spacing': [
		'warn',
		'always',
	],
	'one-var': [
		'warn',
		{
			initialized: 'never',
			uninitialized: 'consecutive',
		},
	],
	'padded-blocks': [
		'warn',
		'never',
	],
	'padding-line-between-statements': [
		'warn',
		{
			blankLine: 'always',
			next: 'return',
			prev: '*',
		},
		{
			blankLine: 'always',
			next: '*',
			prev: ['const', 'let', 'var'],
		},
		{
			blankLine: 'any',
			next: ['const', 'let', 'var'],
			prev: ['const', 'let', 'var'],
		},
		{
			blankLine: 'always',
			next: ['if', 'for', 'while'],
			prev: '*',
		},
		{
			blankLine: 'any',
			next: ['if', 'for', 'while'],
			prev: ['const', 'let', 'var'],
		},
		{
			blankLine: 'always',
			next: '*',
			prev: ['multiline-block-like', 'multiline-expression'],
		},
		{
			blankLine: 'any',
			next: 'break',
			prev: ['multiline-block-like', 'multiline-expression'],
		},
		{
			blankLine: 'always',
			next: ['case', 'default'],
			prev: '*',
		},
		{
			blankLine: 'any',
			next: 'case',
			prev: 'case',
		},
	],
	'prefer-object-spread': 'warn',
	'quote-props': [
		'warn',
		'as-needed',
	],
	quotes: [
		'warn',
		'single',
	],
	radix: [
		'warn',
		'as-needed',
	],
	'rest-spread-spacing': 'warn',
	semi: 'warn',
	'semi-spacing': 'warn',
	/* 'sort-keys': [
		'warn',
		'asc',
		{
			natural: true,
		},
	], */
	'space-before-blocks': 'warn',
	'space-before-function-paren': [
		'warn',
		{
			anonymous: 'never',
			asyncArrow: 'always',
			named: 'never',
		},
	],
	'space-in-parens': 'warn',
	'space-infix-ops': [
		'warn',
		{
			int32Hint: true,
		},
	],
	'space-unary-ops': 'warn',
	'spaced-comment': 'warn',
	'switch-colon-spacing': 'warn',
	'template-curly-spacing': 'warn',
	'template-tag-spacing': 'warn',
	'use-isnan': 'warn',
	'valid-typeof': [
		'warn',
		{
			requireStringLiterals: true,
		},
	],
	yoda: 'warn',
};
